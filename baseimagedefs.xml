<!--
Definitions for docker-baseimage-gui.

This file is used as data source to generate README.md and unRAID template files
from Jinja2 templates.
-->
<defs>
  <baseimage>
    <name>baseimage-gui</name>
    <title>A minimal docker baseimage to ease creation of X graphical application containers</title>
    <description>
This is a docker baseimage that can be used to create containers able to run any
X application on a headless server very easily.  The application's GUI is
accessed through a modern web browser (no installation or configuration needed
on client side) or via any VNC client.
    </description>
    <gui>True</gui>
    <!-- Extra stuff to be added to the documentation. -->
    <documentation>
      <section>
        <title level="2">Accessing the GUI</title>
        <content>
Assuming the host is mapped to the same ports as the container, the graphical
interface of the application can be accessed via:

  * A web browser:
```
http://&lt;HOST IP ADDR&gt;:5800
```

  * Any VNC client:
```
&lt;HOST IP ADDR&gt;:5900
```

If different ports are mapped to the host, make sure they respect the
following formula:

    VNC_PORT = HTTP_PORT + 100

This is to make sure accessing the GUI with a web browser can be done without
specifying the VNC port manually.  If this is not possible, then specify
explicitly the VNC port like this:

    http://&lt;HOST IP ADDR&gt;:5800/?port=&lt;VNC PORT&gt;
        </content>
      </section>
      <section>
        <title level="2">VNC Password</title>
        <content>
To restrict access to your application, a password can be specified.  This can
be done via two methods:
  * By using the `VNC_PASSWORD` environment variable.
  * By creating a `.vncpass_clear` file at the root of the `/config` volume.
  This file should contains the password (in clear).  During the container
  startup, content of the file is obfuscated and moved to `.vncpass`.

**NOTE**: This is a very basic way to restrict access to the application and it
should not be considered as secure in any way.
        </content>
      </section>
      <section>
        <title level="2">Application Icon</title>
        <content>
A picture of your application can be added to the image.  This picture is
displayed in the WEB interface's navigation bar.  Also, multiple favicons are
generated, supporting all browsers and platforms.

Add the following command to your `Dockerfile`, with the proper URL pointing to
your master icon:  The master icon should be a square PNG image with a size of
at least 260x260 for optimal results.
```
# Generate and install favicons.
RUN \
    APP_ICON_URL=https://github.com/jlesage/docker-templates/raw/master/jlesage/images/generic-app-icon.png &amp;&amp; \
    /opt/install_app_icon.sh "$APP_ICON_URL"
```

Favicons are generated by [RealFaviconGenerator].  You can tweak yourself their
display with the following method:
  * Generate favicons yourself with [RealFaviconGenerator].
    * Set the path to `/images/icons/`.
    * Enable versioning and set it to `v=ICON_VERSION`.
  * At the installation page, choose the `Node CLI` tab.
  * Copy the content of `faviconDescription.json`.
  * Minify the JSON using an online [JSON minifier].
    * Before running the minifier, modify the `masterPicture` field to
      `/opt/novnc/images/icons/master_icon.png`.
  * Copy-paste the result in your `Dockerfile`.  It will be passed to the
    install script.
  * Your Dockerfile should have something like:

```
# Generate and install favicons.
RUN \
    APP_ICON_URL=https://github.com/jlesage/docker-templates/raw/master/jlesage/images/generic-app-icon.png &amp;&amp; \
    APP_ICON_DESC='{"masterPicture":"/opt/novnc/images/icons/master_icon.png","iconsPath":"/images/icons/","design":{"ios":{"pictureAspect":"backgroundAndMargin","backgroundColor":"#ffffff","margin":"14%","assets":{"ios6AndPriorIcons":false,"ios7AndLaterIcons":false,"precomposedIcons":false,"declareOnlyDefaultIcon":true}},"desktopBrowser":{},"windows":{"pictureAspect":"noChange","backgroundColor":"#2d89ef","onConflict":"override","assets":{"windows80Ie10Tile":false,"windows10Ie11EdgeTiles":{"small":false,"medium":true,"big":false,"rectangle":false}}},"androidChrome":{"pictureAspect":"noChange","themeColor":"#ffffff","manifest":{"display":"standalone","orientation":"notSet","onConflict":"override","declared":true},"assets":{"legacyIcon":false,"lowResolutionIcons":false}},"safariPinnedTab":{"pictureAspect":"silhouette","themeColor":"#5bbad5"}},"settings":{"scalingAlgorithm":"Mitchell","errorOnImageTooSmall":false},"versioning":{"paramName":"v","paramValue":"ICON_VERSION"}}' &amp;&amp; \
    /opt/install_app_icon.sh "$APP_ICON_URL" "$APP_ICON_DESC"
```
        </content>
      </section>
      <link>
        <name>RealFaviconGenerator</name>
        <url>https://realfavicongenerator.net/</url>
      </link>
      <link>
        <name>JSON minifier</name>
        <url>http://www.cleancss.com/json-minify/</url>
      </link>
    </documentation>
    <!-- Changelog. -->
    <history>
      <release>
        <version>1.6.0</version>
        <date>2017-07-11</date>
        <change>This baseimage has been split to support applications that doesn't need a X GUI:</change>
        <change level="2">All non-GUI related stuff are in jlesage/baseimage baseimage.</change>
        <change level="2">All GUI related stuff are kept in this baseimage (jlesage/baseimage-gui).</change>
        <change level="2">This baseimage now depends on jlesage/baseimage.</change>
        <change></change>
        <change level="2">The way a service is waiting for another one has been fixed.</change>
        <change level="2">The home folder changed from /home/guiapp to /home/app.</change>
      </release>
      <release>
        <version>1.5.0</version>
        <date>2017-07-04</date>
        <change>Added the UMASK environment variable to control how file permissions are set for newly created files.</change>
        <change>Added the X11VNC_EXTRA_OPTS environment variable used to pass additional arguments to the x11vnc server.</change>
        <change>By default, activate auto-scaling of application's window.</change>
        <change>Applied latest Alpine Linux security updates.</change>
      </release>
      <release>
        <version>1.4.3</version>
        <date>2017-06-22</date>
        <change>Updated Alpine Linux to version 3.6.2 for related container images.</change>
      </release>
      <release>
        <version>1.4.2</version>
        <date>2017-06-15</date>
        <change>Associate the application's icon to a unique version to avoid browser cache issues.</change>
      </release>
      <release>
        <version>1.4.1</version>
        <date>2017-06-15</date>
        <change>Fixed prefix of some service related messages.</change>
        <change>Added support for supplying supplementary groups of the application.</change>
      </release>
      <release>
        <version>1.4.0</version>
        <date>2017-06-06</date>
        <change>Added images based on Alpine Linux 3.6.</change>
        <change>Improved process startup and shutdown.</change>
        <change>When container is stopped or restarted, processes are now terminated gracefully and in proper order. This allow the GUI application to execute its termination routine.</change>
        <change>No more error messages when container is stopped or restarted.</change>
      </release>
      <release>
        <version>1.3.2</version>
        <date>2017-05-30</date>
        <change>Fixed password modal window not showing up when required.</change>
        <change>Fixed debian build.</change>
      </release>
      <release>
        <version>1.3.1</version>
        <date>2017-05-17</date>
        <change>Install better font for alpine images.</change>
      </release>
      <release>
        <version>1.3.0</version>
        <date>2017-05-15</date>
        <change>Added support for application's niceness configuration.</change>
      </release>
      <release>
        <version>1.2.3</version>
        <date>2017-05-12</date>
        <change>Adjusted the default display width to 1280 pixels, as documented.</change>
      </release>
      <release>
        <version>1.2.2</version>
        <date>2017-05-11</date>
        <change>Fixed issue with the web UI, where the remote application's window was not taking the available height after activating/deactivating the hideable navigation bar.</change>
      </release>
      <release>
        <version>1.2.1</version>
        <date>2017-05-10</date>
        <change>Fixed issue where clipboard content was lost on modal window closure.</change>
      </release>
      <release>
        <version>1.2.0</version>
        <date>2017-05-09</date>
        <change>New UI for web access to the application's GUI.</change>
        <change level="2">Based on Bootstrap and JQuery.</change>
        <change level="2">Mobile friendly.</change>
        <change level="2">Hideable navigation bar.</change>
        <change level="2">Downscaling support.</change>
        <change level="2">Clipboard support.</change>
        <change level="2">Fullscreen toggle.</change>
        <change level="2">Draggable remote screen when it doesn't fix the client's window.</change>
        <change level="2">Virtual keyboard support on mobile.</change>
        <change level="2">Right-click via long touch on mobile.</change>
      </release>
      <release>
        <version>1.0.1</version>
        <date>2017-05-5</date>
        <change>Fixed issue where VNC password was still applied after removal of the VNC password file from `/config`.</change>
        <change>Fixed mouse handling when accessing the container's GUI via Microsoft Internet Explorer/Edge.</change>
        <change>Fixed a crash of the build-in VNC server.</change>
      </release>
      <release>
        <version>1.0.0</version>
        <date>2017-04-07</date>
        <change>Initial release.</change>
      </release>
    </history>
  </baseimage>
  <app>
    <container>
      <overview>The GUI of the application is accessed through a modern web browser (no installation or configuration needed on client side) or via any VNC client.</overview>
    </container>
  </app>
  <container>
    <!-- Environment variables -->
    <environment_variables>
      <environment_variable>
        <name>DISPLAY_WIDTH</name>
        <description>Width (in pixels) of the application's window.</description>
        <default>1280</default>
        <unraid_template>
          <title>Display Width</title>
          <display>advanced</display>
          <required>false</required>
          <mask>false</mask>
        </unraid_template>
      </environment_variable>
      <environment_variable>
        <name>DISPLAY_HEIGHT</name>
        <description>Height (in pixels) of the application's window.</description>
        <default>768</default>
        <unraid_template>
          <title>Display Height</title>
          <display>advanced</display>
          <required>false</required>
          <mask>false</mask>
        </unraid_template>
      </environment_variable>
        <environment_variable>
        <name>VNC_PASSWORD</name>
        <description>Password needed to connect to the application's GUI.  See the [VNC Pasword](#vnc-password) section for more details.</description>
        <default/>
      </environment_variable>
      <environment_variable>
        <name>X11VNC_EXTRA_OPTS</name>
        <description>Extra options to pass to the x11vnc server running in the Docker container.  **WARNING**: For advanced users. Do not use unless you know what you are doing.</description>
        <default/>
        <unraid_template>
          <title>Extra x11vnc Options</title>
          <description>Extra options to pass to the x11vnc server running in the Docker container.[br][span style='color: red;'][b]Warning:[/b][/span] For advanced users. Do not use unless you know what you are doing.</description>
          <display>advanced</display>
          <required>false</required>
          <mask>false</mask>
        </unraid_template>
      </environment_variable>
    </environment_variables>
    <!-- Volumes -->
    <volumes/>
    <!-- Network ports -->
    <ports>
      <port>
        <number>5800</number>
        <protocol>tcp</protocol>
        <description>Port used to access the application's GUI via the web interface.</description>
        <mandatory>true</mandatory>
        <unraid_template>
          <title>WEB Port for GUI</title>
          <default>{{ 7800 + defs.app.id|int }}</default>
          <display>advanced-hide</display>
          <required>true</required>
          <mask>false</mask>
        </unraid_template>
      </port>
      <port>
        <number>5900</number>
        <protocol>tcp</protocol>
        <description>Port used to access the application's GUI via the VNC protocol.</description>
        <mandatory>true</mandatory>
        <unraid_template>
          <title>VNC Port for GUI</title>
          <description>Port used to access the application's GUI via the VNC protocol.[br]Make sure this port is equal to the WEB GUI port + 100.</description>
          <default>{{ 7900 + defs.app.id|int }}</default>
          <display>advanced-hide</display>
          <required>true</required>
          <mask>false</mask>
        </unraid_template>
      </port>
    </ports>
    <!-- Devices -->
    <devices/>
  </container>
  <!-- Extra stuff to be added to the documentation. -->
  <documentation/>
</defs>
