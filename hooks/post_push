#!/bin/bash
#
# Post push hook for Docker Automated Build.
#
# This hook adds a tag that includes the image version.

set -e # Exit immediately if a command exits with a non-zero status.
set -u # Treat unset variables as an error.

source custom_hook_env

echo "Environment variables:
    IMAGE_NAME=$IMAGE_NAME
    DOCKER_REPO=$DOCKER_REPO
    DOCKER_TAG=$DOCKER_TAG
    SOURCE_BRANCH=$SOURCE_BRANCH
    GIT_TAG=$GIT_TAG
    IMAGE_VERSION=$IMAGE_VERSION
"

# The git tag has a format like:
#     v1.0.0
#     v0.1.0-beta
#     v2.0.0-rc
#     v2.0.0-rc2
#
# For normal versions without a beta/rc suffix, we need to add 3 tags.  For
# example, for a git tag of v2.1.5:
#   - ${DOCKER_TAG}-v2.1.5 (exact version)
#   - ${DOCKER_TAG}-v2.1   (latest minor version)
#   - ${DOCKER_TAG}-v2     (latest major version)

DOCKER_NEWTAG_EXACT="${DOCKER_TAG}-${GIT_TAG}"
DOCKER_NEWTAG_LATEST_MINOR=UNSET
DOCKER_NEWTAG_LATEST_MAJOR=UNSET

if [[ "$GIT_TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
    MAJOR="$(echo "${GIT_TAG:1}" | cut -d'.' -f1)"
    MINOR="$(echo "${GIT_TAG:1}" | cut -d'.' -f2)"

    DOCKER_NEWTAG_LATEST_MINOR="${DOCKER_TAG}-v${MAJOR}.${MINOR}"
    DOCKER_NEWTAG_LATEST_MAJOR="${DOCKER_TAG}-v${MAJOR}"
fi

for TAG in "$DOCKER_NEWTAG_EXACT" "$DOCKER_NEWTAG_LATEST_MINOR" "$DOCKER_NEWTAG_LATEST_MAJOR"
do
    [ "$TAG" != "UNSET" ] || continue
    echo "Adding tag '$TAG' to image..."
    docker tag $IMAGE_NAME ${DOCKER_REPO}:$TAG
    echo "Pushing image..."
    docker push ${DOCKER_REPO}:$TAG
done

echo "post_push hook terminated successfully."
